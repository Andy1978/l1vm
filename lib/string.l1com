// now with string array demo
(main func)
    (set int64 1 zero 0)
	(set int64 1 one 1)
    (set string 13 hellostr "Hello")
    (set string 8 worldstr " world!")
	(set string 15 hellostr2 "")
	(set string 15 worldstr2 "")
	(set string 2 dotstr ",")
    (set int64 1 slen 0)
    (set string 30 bufstr "")
    (set int64 1 buflen 29)
    (set byte 1 bytenum 42)
	(set int64 1 hello_len 5)
	(set int64 1 world_len 6)
	(set int64 1 mid_pos 6)
	(set int64 1 dot_pos 5)
	//
	// set array with 30 chars
	// and 15 chars length for array strings
	(set string 30 arraystr "")
	(set int64 1 array_size 30)
	(set int64 1 string_len 15)
    (zero :string_init call)
	// copy hellostr to array
	(hellostraddr arraystraddr zero string_len array_size :string_to_array call)
	(loadreg)
	// copy worldstr to array
	(worldstraddr arraystraddr one string_len array_size :string_to_array call)
    (loadreg)
	// get strings from array
	(arraystraddr hellostr2addr zero string_len array_size :array_to_string call)
	(loadreg)
	(arraystraddr worldstr2addr one string_len array_size :array_to_string call)
	(loadreg)
	(6 hellostr2 0 0 intr0)
	(6 worldstr2 0 0 intr0)
	(7 0 0 0 intr0)
	(7 0 0 0 intr0)
    (hellostraddr worldstraddr :string_cat call)
    (loadreg)
    (6 hellostr 0 0 intr0)
    (7 0 0 0 intr0)
    (hellostraddr :string_len call)
    (slen stpopi)
    (loadreg)
    (4 slen 0 0 intr0)
    (7 0 0 0 intr0)
	(hellostraddr hellostr2addr hello_len :string_left call)
	(loadreg)
	(6 hellostr2 0 0 intr0)
	(7 0 0 0 intr0)
	(hellostraddr worldstr2addr world_len :string_right call)
	(loadreg)
	(6 worldstr2 0 0 intr0)
	(7 0 0 0 intr0)
    (slen bufstr buflen :string_int64tostring call)
    (loadreg)
    (6 bufstr 0 0 intr0)
    (7 0 0 0 intr0)
    (bytenum bufstr buflen :string_bytetohexstring call)
    (loadreg)
    (6 bufstr 0 0 intr0)
    (7 0 0 0 intr0)
	// get char at positon mid_pos in hellostr
	(hellostraddr bufstr mid_pos :string_mid call)
	(loadreg)
	(6 bufstr 0 0 intr0)
    (7 0 0 0 intr0)
	(dotstraddr hellostraddr dot_pos :string_to_string call)
	(loadreg)
	(6 hellostr 0 0 intr0)
	(7 0 0 0 intr0)
	(255 0 0 0 intr0)
(funcend)
// string library
//
//
(string_init func)
    (set string s modulestr@string "libl1vmstring.so")
    (set string s lenstr@string "string_len")
    (set string s copystr@string "string_copy")
    (set string s catstr@string "string_cat")
    (set string s int64tostringstr@string "string_int64_to_string")
    (set string s bytetohexstringstr@string "string_byte_to_hexstring")
    (set string s doubletostringstr@string "string_double_to_string")
	(set string s bytenumtostringstr@string "string_bytenum_to_string")
	(set string s stringtoarraystr@string "string_string_to_array")
	(set string s arraytostringstr@string "string_array_to_string")
	(set string s stringleftstr@string "string_left")
	(set string s stringrightstr@string "string_right")
	(set string s stringmidstr@string "string_mid")
	(set string s stringtostringstr@string "string_to_string")
    (set int64 1 len@string 0)
    (set int64 1 copy@string 1)
    (set int64 1 cat@string 2)
    (set int64 1 int64tostring@string 3)
    (set int64 1 bytetohexstring@string 4)
    (set int64 1 doubletostring@string 5)
	(set int64 1 bytenumtostring@string 6)
	(set int64 1 stringtoarray@string 7)
	(set int64 1 arraytostring@string 8)
	(set int64 1 stringleft@string 9)
	(set int64 1 stringright@string 10)
	(set int64 1 stringmid@string 11)
	(set int64 1 stringtostring@string 12)
    (set int64 1 mod@string 0)
    // get argument from stack
    (mod@string stpopi)
    // load string module
    (0 modulestr@stringaddr mod@string 0 intr0)
    // set functions
    (2 mod@string len@string lenstr@stringaddr intr0)
    (2 mod@string copy@string copystr@stringaddr intr0)
    (2 mod@string cat@string catstr@stringaddr intr0)
    (2 mod@string int64tostring@string int64tostringstr@stringaddr intr0)
    (2 mod@string bytetohexstring@string bytetohexstringstr@stringaddr intr0)
    (2 mod@string doubletostring@string doubletostringstr@stringaddr intr0)
	(2 mod@string bytenumtostring@string bytenumtostringstr@stringaddr intr0)
	(2 mod@string stringtoarray@string stringtoarraystr@stringaddr intr0)
	(2 mod@string arraytostring@string arraytostringstr@stringaddr intr0)
	(2 mod@string stringleft@string stringleftstr@stringaddr intr0)
	(2 mod@string stringright@string stringrightstr@stringaddr intr0)
	(2 mod@string stringmid@string stringmidstr@stringaddr intr0)
	(2 mod@string stringtostring@string stringtostringstr@stringaddr intr0)
(funcend)
(string_len func)
// argument: int64 string address
// return: int64 string len
    (3 mod@string len@string 0 intr0)
(funcend)
(string_copy func)
// arguments: string source address, string destination address
    (3 mod@string copy@string 0 intr0)
(funcend)
(string_cat func)
// arguments: string source address, string destination address
    (3 mod@string cat@string 0 intr0)
(funcend)
(string_int64tostring func)
// arguments: int64 number, string source address, string len
    (3 mod@string int64tostring@string 0 intr0)
(funcend)
(string_bytetohexstring func)
// arguments: byte number, string source address, string len
    (3 mod@string bytetohexstring@string 0 intr0)
(funcend)
(string_doubletostring func)
// arguments: double number, string source address, string len
    (3 mod@string doubletostring@string 0 intr0)
(funcend)
(string_bytenumtostring func)
	(3 mod@string bytenumtostring@string 0 intr0)
(funcend)
(string_to_array func)
// args: sourceaddr, destaddr, index, stringlen, arraysize
	(3 mod@string stringtoarray@string 0 intr0)
(funcend)
(array_to_string func)
// args: sourceaddr, destaddr, index, stringlen, arraysize
	(3 mod@string arraytostring@string 0 intr0)
(funcend)
(string_left func)
// args: sourceaddr, destaddr, number of chars
	(3 mod@string stringleft@string 0 intr0)
(funcend)
(string_right func)
// args: sourceaddr, destaddr, number of chars
	(3 mod@string stringright@string 0 intr0)
(funcend)
(string_mid func)
// args: sourceaddr, destaddr, positon of char in source to copy
	(3 mod@string stringmid@string 0 intr0)
(funcend)
(string_to_string func)
// args: sourceddr, destaddr, position in dest to copy source char into
	(3 mod@string stringtostring@string 0 intr0)
(funcend)
