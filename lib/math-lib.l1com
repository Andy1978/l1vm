(main func)
    (set int64 1 zero 0)
    (set int64 1 randstart 2003)
    (set int64 1 random 0)
    (zero :math_init call)
    (loadreg)
    (randstart :math_randinit call)
    (loadreg)
    (:math_randint call)
    (random stpopi)
    (loadreg)
    (4 random 0 0 intr0)
    (7 0 0 0 intr0)
    // close module
    (1 zero 0 0 intr0)
    (255 zero 0 0 intr0)
(funcend)
// math library
//
//
(math_init func)
    (set string 15 modulestr@math "libl1vmmath.so")
    (set string 12 int2doublestr@math "int2double")
    (set string 12 double2intstr@math "double2int")
    (set string 12 sqrtdoublestr@math "sqrtdouble")
    (set string 10 logdoublestr@math "logdouble")
    (set string 11 log2doublestr@math "log2double")
    (set string 10 randinitstr@math "rand_init")
    (set string 9 randintstr@math "rand_int")
    (set string 12 randdoublestr@math "rand_double")
    (set int64 1 int2double@math 0)
    (set int64 1 double2int@math 1)
    (set int64 1 sqrtdouble@math 2)
    (set int64 1 logdouble@math 3)
    (set int64 1 log2double@math 4)
    (set int64 1 randinit@math 5)
    (set int64 1 randint@math 6)
    (set int64 1 randdouble@math 7)
    (set int64 1 mod@math 0)
    // get argument from stack
    (mod@math stpopi)
    // load math module
    (0 modulestr@mathaddr mod@math 0 intr0)
    // set functions
    (2 mod@math int2double@math int2doublestr@mathaddr intr0)
    (2 mod@math double2int@math double2intstr@mathaddr intr0)
    (2 mod@math sqrtdouble@math sqrtdoublestr@mathaddr intr0)
    (2 mod@math logdouble@math logdoublestr@mathaddr intr0)
    (2 mod@math log2double@math log2doublestr@mathaddr intr0)
    (2 mod@math randinit@math randinitstr@mathaddr intr0)
    (2 mod@math randint@math randintstr@mathaddr intr0)
    (2 mod@math randdouble@math randdoublestr@mathaddr intr0)
(funcend)
// wrapper functions
(math_int2double func)
    (3 mod@math int2double@math 0 intr0)
(funcend)
(math_double2int func)
    (3 mod@math double2int@math 0 intr0)
(funcend)
(math_sqrtdouble func)
    (3 mod@math sqrtdouble@math 0 intr0)
(funcend)
(math_logdouble func)
    (3 mod@math logdouble@math 0 intr0)
(funcend)
(math_log2double func)
    (3 mod@math log2double@math 0 intr0)
(funcend)
(math_randinit func)
    (3 mod@math randinit@math 0 intr0)
(funcend)
(math_randint func)
    (3 mod@math randint@math 0 intr0)
(funcend)
(math_randdouble func)
    (3 mod@math randdouble@math 0 intr0)
(funcend)
