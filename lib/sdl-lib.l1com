// GUI demo, SDL module
//
//
(main func)
	(set int64 1 zero 0)
	(set int64 1 one 1)
	(set int64 1 two 2)
	(set int64 1 three 3)
	(set int64 1 four 4)
	(set int64 1 five 5)
	(set int64 1 six 6)
	(set int64 1 seven 7)
	(set int64 1 width 800)
	(set int64 1 height 600)
	(set int64 1 width_b 799)
	(set int64 1 height_b 599)
	(set int64 1 bit 32)
	(set int64 1 x 20)
	(set int64 1 y 20)
	(set int64 1 x_quit 20)
	(set int64 1 y_quit 80)
	(set int64 1 x_check 20)
	(set int64 1 y_check 140)
	(set int64 1 x_string 20)
	(set int64 1 y_string 200)
	(set int64 1 x_cycle 100)
	(set int64 1 y_cycle 260)
	(set int64 1 x_prog 300)
	(set int64 1 y_prog 80)
	(set int64 1 value_cycle 0)
	(set int64 1 value_prog 75)
	(set int64 1 visible_string 13)
	(set int64 1 x_slider 300)
	(set int64 1 y_slider 120)
	(set int64 1 slider_min 100)
	(set int64 1 slider_max 150)
	(set int64 1 slider_value 125)
	(set int64 1 x_slider_vert 300)
	(set int64 1 y_slider_vert 180)
	(set int64 1 slider_vert_width 40)
	(set int64 1 slider_vert_height 200)
	(set int64 1 gadgets 8)
	(set int64 1 status 1)
	(set int64 1 delay 10000)
	(set string s screenshotstr " screenshot ")
	(set string s quitstr  "    Quit    ")
	(set string s checkstr "test checkbox")
	(set string s stringstr "test")
	(set string s valuestr "Hello world!")
	(set string s fontname "fonts/FreeMono.ttf")
	(set string s red_cyclestr "red")
	(set string s green_cyclestr "green")
	(set string s blue_cyclestr "blue")
	(set string s text_cyclestr "color")
	(set string s text_progstr "progress")
	(set string s picture_namestr "screenshot.bmp")
	(set string s picture_errstr "ERROR can't save screenshot!")
	(set string s picture_okstr "screenshot saved!")
	(set string s slider_str "      set value      ")
	// slider horizontal
	(set string 5 slider_value "")
	(set string 5 slider_value_empty "    ")
	(set int64 1 x_slider_value 600)
	(set int64 1 y_slider_value 125)
	(set int64 1 slider_value_max 4)
	(set int64 1 x_slider_box 600)
	(set int64 1 y_slider_box 120)
	(set int64 1 x2_slider_box 650)
	(set int64 1 y2_slider_box 150)
	// slider vertical
	(set int64 1 x_slider_vert_value 300)
	(set int64 1 y_slider_vert_value 400)
	(set int64 1 slider_vert_value_max 4)
	(set int64 1 x_slider_vert_box 300)
	(set int64 1 y_slider_vert_box 400)
	(set int64 1 x2_slider_vert_box 340)
	(set int64 1 y2_slider_vert_box 450)
	(set int64 1 fontsize 20)
	(set byte 1 back_r 143)
	(set byte 1 back_g 147)
	(set byte 1 back_b 151)
	(set byte 1 alpha 255)
	(set byte 1 black 0)
	(set int64 1 gadget_sel 0)
	(set string 256 gadget_retstr "")
	(set int64 1 ret 0)
	(set int64 1 value 0)
	(set int64 1 f 0)
	// open screen
    (zero width height bit :sdl_open_screen call)
	(ret stpopi)
	(loadreg)
	(one :string_init call)
	(loadreg)
	(loadreg)
	// load font
    (fontnameaddr fontsize :sdl_font_ttf call)
    (loadreg)
	(gadgets :init_gui call)
	(loadreg)
	(zero zero width_b height_b back_r back_g back_b alpha :sdl_rectangle_fill call)
	(loadreg)
	(zero x y screenshotstraddr status :set_gadget_button call)
	(loadreg)
	(one x_quit y_quit quitstraddr status :set_gadget_button call)
	(loadreg)
	(two x_check y_check checkstraddr one status :set_gadget_checkbox call)
	(loadreg)
	(three x_string y_string stringstraddr valuestraddr visible_string status :set_gadget_string call)
	(loadreg)
	(x_cycle y_cycle text_cyclestr value_cycle status blue_cyclestr green_cyclestr red_cyclestr three four :set_gadget_cycle call)
	(loadreg)
	(five x_prog y_prog text_progstr value_prog status :set_gadget_progress call)
	(loadreg)
	(six x_slider y_slider slider_straddr slider_value slider_min slider_max status :set_gadget_slider call)
	(loadreg)
	(seven x_slider_vert y_slider_vert slider_vert_width slider_vert_height slider_value slider_min slider_max status :set_gadget_slider_vert call)
	(loadreg)
	// draw slider values
	(slider_value slider_valueaddr slider_value_max :string_int64tostring call)
	(x_slider_box y_slider_box x2_slider_box y2_slider_box back_r back_g back_b alpha :sdl_rectangle_fill call)
	(loadreg)
	(x_slider_value y_slider_value black black black slider_valueaddr :sdl_text_ttf call)
	(loadreg)
	(slider_value slider_valueaddr slider_value_max :string_int64tostring call)
	(x_slider_vert_box y_slider_vert_box x2_slider_vert_box y2_slider_vert_box back_r back_g back_b alpha :sdl_rectangle_fill call)
	(loadreg)
	(x_slider_vert_value y_slider_vert_value black black black slider_valueaddr :sdl_text_ttf call)
	(loadreg)
	(:loop)
	(:sdl_update call)
	(loadreg)
	(gadget_retstraddr :gadget_event call)
	(ret stpopi)
	(value stpopi)
	(gadget_sel stpopi)
	(loadreg)
	(4 gadget_sel 0 0 intr0)
	(((gadget_sel one ==) f =) f if)
		(255 0 0 0 intr0)
	(endif)
	(((gadget_sel zero ==) f =) f if)
		// save screenshot
		(picture_namestr :sdl_save_picture call)
		// (ret stpopi)
		(loadreg)
		(((ret zero !=) f =) f if)
			(6 picture_errstr 0 0 intr0)
			(7 0 0 0 intr0)
		(else)
			(6 picture_okstr 0 0 intr0)
			(7 0 0 0 intr0)
		(endif)
	(endif)
	(((gadget_sel six ==) f =) f if)
		(value slider_valueaddr slider_value_max :string_int64tostring call)
		(x_slider_box y_slider_box x2_slider_box y2_slider_box back_r back_g back_b alpha :sdl_rectangle_fill call)
		(loadreg)
		(x_slider_value y_slider_value black black black slider_valueaddr :sdl_text_ttf call)
		(loadreg)
	(endif)
	(((gadget_sel seven ==) f =) f if)
		(value slider_valueaddr slider_value_max :string_int64tostring call)
		(x_slider_vert_box y_slider_vert_box x2_slider_vert_box y2_slider_vert_box back_r back_g back_b alpha :sdl_rectangle_fill call)
		(loadreg)
		(x_slider_vert_value y_slider_vert_value black black black slider_valueaddr :sdl_text_ttf call)
		(loadreg)
	(endif)
	(7 0 0 0 intr0)
	// (8 delay 0 0 intr0)
	(:loop jmp)
(funcend)
//
// SDL library
//
//
(sdl_open_screen func)
    (set int64 1 zero 0)
    (set string 14 modulestr@sdl "libl1vmsdl.so")
    (set string 16 openstr@sdl "sdl_open_screen")
    (set string 9 quitstr@sdl "sdl_quit")
    (set string 16 pixelstr@sdl "sdl_pixel_alpha")
    (set string 15 linestr@sdl "sdl_line_alpha")
    (set string 20 rectanglestr@sdl "sdl_rectangle_alpha")
    (set string 25 rectangle_fillstr@sdl "sdl_rectangle_fill_alpha")
    (set string 17 circlestr@sdl "sdl_circle_alpha")
    (set string 22 circle_fillstr@sdl "sdl_circle_fill_alpha")
    (set string 18 ellipsestr@sdl "sdl_ellipse_alpha")
    (set string 23 ellipse_fillstr@sdl "sdl_ellipse_fill_alpha")
    (set string 14 piestr@sdl "sdl_pie_alpha")
    (set string 19 pie_fillstr@sdl "sdl_pie_fill_alpha")
    (set string 17 trigonstr@sdl "sdl_trigon_alpha")
    (set string 22 trigon_fillstr@sdl "sdl_trigon_fill_alpha")
    (set string 13 font_ttfstr@sdl "sdl_font_ttf")
    (set string 13 text_ttfstr@sdl "sdl_text_ttf")
    (set string 19 get_pixelcolorstr@sdl "sdl_get_pixelcolor")
    (set string 11 updatestr@sdl "sdl_update")
	// GUI definitions
	(set string 13 init_gadgetsstr@sdl "init_gadgets")
	(set string 18 set_gadget_buttonstr@sdl "set_gadget_button")
	(set string 24 set_gadget_progressstr@sdl "set_gadget_progress_bar")
	(set string 21 set_gadget_checkboxstr@sdl "set_gadget_checkbox")
	(set string 19 set_gadget_cyclestr@sdl "set_gadget_cycle")
	(set string 21 set_gadget_stringstr@sdl "set_gadget_string")
	(set string 16 set_gadget_boxstr@sdl "set_gadget_box")
	(set string s set_gadget_sliderstr@sdl "set_gadget_slider")
	(set string s set_gadget_slider_vertstr@sdl "set_gadget_slider_vert")
	(set string 23 change_gadget_checkboxstr@sdl "change_gadget_checkbox")
	(set string 21 change_gadget_cyclestr@sdl "change_gadget_cycle")
	(set string 25 change_gadget_stringstr@sdl "change_gadget_string")
	(set string 20 change_gadget_boxstr@sdl "change_gadget_box")
	(set string 30 change_gadget_progressstr@sdl "change_gadget_progress_bar")
	(set string s change_gadget_sliderstr@sdl "change_gadget_slider")
	(set string 19 get_gadget_x2y2str@sdl "get_gadget_x2y2")
	(set string 13 gadget_eventstr@sdl "gadget_event")
	(set string s load_picturestr@sdl "sdl_load_picture")
	(set string s save_picturestr@sdl "sdl_save_picture")
	(set string s delaystr@sdl "sdl_delay")
    (set int64 1 open@sdl 0)
    (set int64 1 quit@sdl 1)
    (set int64 1 update@sdl 2)
    (set int64 1 pixel@sdl 3)
    (set int64 1 line@sdl 4)
    (set int64 1 rectangle@sdl 5)
    (set int64 1 rectangle_fill@sdl 6)
    (set int64 1 circle@sdl 7)
    (set int64 1 circle_fill@sdl 8)
    (set int64 1 ellipse@sdl 9)
    (set int64 1 ellipse_fill@sdl 10)
    (set int64 1 pie@sdl 11)
    (set int64 1 pie_fill@sdl 12)
    (set int64 1 trigon@sdl 13)
    (set int64 1 trigon_fill@sdl 14)
    (set int64 1 font_ttf@sdl 15)
    (set int64 1 text_ttf@sdl 16)
    (set int64 1 get_pixelcolor@sdl 17)
	(set int64 1 init_gadgets@sdl 18)
	(set int64 1 set_gadget_button@sdl 19)
	(set int64 1 set_gadget_progress@sdl 20)
	(set int64 1 set_gadget_checkbox@sdl 21)
	(set int64 1 set_gadget_cycle@sdl 22)
	(set int64 1 set_gadget_string@sdl 23)
	(set int64 1 set_gadget_box@sdl 24)
	(set int64 1 change_gadget_checkbox@sdl 25)
	(set int64 1 change_gadget_cycle@sdl 26)
	(set int64 1 change_gadget_string@sdl 27)
	(set int64 1 change_gadget_box@sdl 28)
	(set int64 1 change_gadget_progress@sdl 29)
	(set int64 1 get_gadget_x2y2@sdl 30)
	(set int64 1 gadget_event@sdl 31)
	(set int64 1 load_picture@sdl 32)
	(set int64 1 save_picture@sdl 33)
	(set int64 1 delay@sdl 34)
	(set int64 1 set_gadget_slider@sdl 35)
	(set int64 1 set_gadget_slider_vert@sdl 36)
	(set int64 1 change_gadget_slider@sdl 37)
    (set int64 1 get@sdl 0)
    // call arguments
    (set int64 1 width@sdl 0)
    (set int64 1 height@sdl 0)
    (set int64 1 bit@sdl 0)
    (set int64 1 mod@sdl 0)
    // get arguments from stack
    (bit@sdl stpopi)
    (height@sdl stpopi)
    (width@sdl stpopi)
    (mod@sdl stpopi)
    // load sdl module
    (0 modulestr@sdladdr mod@sdl 0 intr0)
    // set functions
    (2 mod@sdl open@sdl openstr@sdladdr intr0)
    (2 mod@sdl quit@sdl quitstr@sdladdr intr0)
    (2 mod@sdl pixel@sdl pixelstr@sdladdr intr0)
    (2 mod@sdl line@sdl linestr@sdladdr intr0)
    (2 mod@sdl rectangle@sdl rectanglestr@sdladdr intr0)
    (2 mod@sdl rectangle_fill@sdl rectangle_fillstr@sdladdr intr0)
    (2 mod@sdl circle@sdl circlestr@sdladdr intr0)
    (2 mod@sdl circle_fill@sdl circle_fillstr@sdladdr intr0)
    (2 mod@sdl ellipse@sdl ellipsestr@sdladdr intr0)
    (2 mod@sdl ellipse_fill@sdl ellipse_fillstr@sdladdr intr0)
    (2 mod@sdl pie@sdl piestr@sdladdr intr0)
    (2 mod@sdl pie_fill@sdl pie_fillstr@sdladdr intr0)
    (2 mod@sdl trigon@sdl trigonstr@sdladdr intr0)
    (2 mod@sdl trigon_fill@sdl trigon_fillstr@sdladdr intr0)
    (2 mod@sdl update@sdl updatestr@sdladdr intr0)
    (2 mod@sdl font_ttf@sdl font_ttfstr@sdladdr intr0)
    (2 mod@sdl text_ttf@sdl text_ttfstr@sdladdr intr0)
    (2 mod@sdl get_pixelcolor@sdl get_pixelcolorstr@sdladdr intr0)
	(2 mod@sdl init_gadgets@sdl init_gadgetsstr@sdladdr intr0)
	(2 mod@sdl set_gadget_button@sdl set_gadget_buttonstr@sdladdr intr0)
	(2 mod@sdl set_gadget_progress@sdl set_gadget_progressstr@sdladdr intr0)
	(2 mod@sdl set_gadget_checkbox@sdl set_gadget_checkboxstr@sdladdr intr0)
	(2 mod@sdl set_gadget_cycle@sdl set_gadget_cyclestr@sdladdr intr0)
	(2 mod@sdl set_gadget_string@sdl set_gadget_stringstr@sdladdr intr0)
	(2 mod@sdl set_gadget_box@sdl set_gadget_boxstr@sdladdr intr0)
	(2 mod@sdl change_gadget_checkbox@sdl change_gadget_checkboxstr@sdladdr intr0)
	(2 mod@sdl change_gadget_cycle@sdl change_gadget_cyclestr@sdladdr intr0)
	(2 mod@sdl change_gadget_string@sdl change_gadget_stringstr@sdladdr intr0)
	(2 mod@sdl change_gadget_box@sdl change_gadget_boxstr@sdladdr intr0)
	(2 mod@sdl change_gadget_progress@sdl change_gadget_progressstr@sdladdr intr0)
	(2 mod@sdl get_gadget_x2y2@sdl get_gadget_x2y2str@sdladdr intr0)
	(2 mod@sdl gadget_event@sdl gadget_eventstr@sdladdr intr0)
	(2 mod@sdl load_picture@sdl load_picturestr@sdladdr intr0)
	(2 mod@sdl save_picture@sdl save_picturestr@sdladdr intr0)
	(2 mod@sdl delay@sdl delaystr@sdladdr intr0)
	(2 mod@sdl set_gadget_slider@sdl set_gadget_sliderstr@sdladdr intr0)
	(2 mod@sdl set_gadget_slider_vert@sdl set_gadget_slider_vertstr@sdladdr intr0)
	(2 mod@sdl change_gadget_slider@sdl change_gadget_sliderstr@sdladdr intr0)
    // open screen
    (width@sdl stpushi)
    (height@sdl stpushi)
    (bit@sdl stpushb)
    (3 mod@sdl open@sdl 0 intr0)
(funcend)
(sdl_font_ttf func)
    // arguments on stack: fontname (zero terminated), size
    (3 mod@sdl font_ttf@sdl 0 intr0)
(funcend)
(sdl_text_ttf func)
    // arguments on stack: x, y, r, g, b, text (zero terminated)
    (3 mod@sdl text_ttf@sdl 0 intr0)
(funcend)
(sdl_pixel func)
    // arguments on stack: x, y, r, g, b, alpha
    // call sdl module function
    (3 mod@sdl pixel@sdl 0 intr0)
(funcend)
(sdl_line func)
    // arguments: x1, y1, x2, y2, r, g, b, alpha
    (3 mod@sdl line@sdl 0 intr0)
(funcend)
(sdl_rectangle func)
    // arguments: x1, y1, x2, y2, r, g, b, alpha
    (3 mod@sdl rectangle@sdl 0 intr0)
(funcend)
(sdl_rectangle_fill func)
    // arguments: x1, y1, x2, y2, r, g, b, alpha
    (3 mod@sdl rectangle_fill@sdl 0 intr0)
(funcend)
(sdl_circle func)
    // arguments: x, y, radius, r, g, b, alpha
    (3 mod@sdl circle@sdl 0 intr0)
(funcend)
(sdl_circle_fill func)
    // arguments: x, y, radius, r, g, b, alpha
    (3 mod@sdl circle_fill@sdl 0 intr0)
(funcend)
(sdl_ellipse func)
    // arguments: x, y, xradius, yradius, r, g, b, alpha
    (3 mod@sdl ellipse@sdl 0 intr0)
(funcend)
(sdl_ellipse_fill func)
    // arguments: x, y, xradius, yradius, r, g, b, alpha
    (3 mod@sdl ellipse_fill@sdl 0 intr0)
(funcend)
(sdl_pie func)
    // arguments: x, y, radius, startangle, endangle, r, g, b, alpha
    (3 mod@sdl pie@sdl 0 intr0)
(funcend)
(sdl_pie_fill func)
    // arguments: x, y, radius, startangle, endangle, r, g, b, alpha
    (3 mod@sdl pie_fill@sdl 0 intr0)
(funcend)
(sdl_trigon func)
    // arguments: x1, y1, x2, y2, x3, y3, r, g, b, alpha
    (3 mod@sdl trigon@sdl 0 intr0)
(funcend)
(sdl_trigon_fill func)
    // arguments: x1, y1, x2, y2, x3, y3, r, g, b, alpha
    (3 mod@sdl trigon_fill@sdl 0 intr0)
(funcend)
(sdl_get_pixelcolor func)
    // arguments: x, y
    // return: r, g, b
    (3 mod@sdl get_pixelcolor@sdl 0 intr0)
(funcend)
(sdl_update func)
    (3 mod@sdl update@sdl 0 intr0)
(funcend)
(sdl_quit func)
    (3 mod@sdl quit@sdl 0 intr0)
(funcend)
// GUI
(init_gui func)
	// arguments: max-gadget-number
	(3 mod@sdl init_gadgets@sdl 0 intr0)
(funcend)
(set_gadget_button func)
	// arguments: gadget-number, x, y, text-address, status
	(3 mod@sdl set_gadget_button@sdl 0 intr0)
(funcend)
(set_gadget_progress func)
	(3 mod@sdl set_gadget_progress@sdl 0 intr0)
(funcend)
(set_gadget_checkbox func)
	(3 mod@sdl set_gadget_checkbox@sdl 0 intr0)
(funcend)
(set_gadget_cycle func)
	(3 mod@sdl set_gadget_cycle@sdl 0 intr0)
(funcend)
(set_gadget_string func)
	(3 mod@sdl set_gadget_string@sdl 0 intr0)
(funcend)
(set_gadget_box func)
	(3 mod@sdl set_gadget_box@sdl 0 intr0)
(funcend)
(set_gadget_slider func)
	(3 mod@sdl set_gadget_slider@sdl 0 intr0)
(funcend)
(set_gadget_slider_vert func)
	(3 mod@sdl set_gadget_slider_vert@sdl 0 intr0)
(funcend)
// change -------------------------------------------------
(change_gadget_checkbox func)
	(3 mod@sdl change_gadget_checkbox@sdl 0 intr0)
(funcend)
(change_gadget_cycle func)
	(3 mod@sdl change_gadget_cycle@sdl 0 intr0)
(funcend)
(change_gadget_string func)
	(3 mod@sdl change_gadget_string@sdl 0 intr0)
(funcend)
(change_gadget_box func)
	(3 mod@sdl change_gadget_box@sdl 0 intr0)
(funcend)
(change_gadget_progress func)
	(3 mod@sdl change_gadget_progress@sdl 0 intr0)
(funcend)
(change_gadget_slider func)
	(3 mod@sdl change_gadget_slider@sdl 0 intr0)
(funcend)
(get_gadget_x2y2 func)
	(3 mod@sdl get_gadget_x2y2@sdl 0 intr0)
(funcend)
(gadget_event func)
	(3 mod@sdl gadget_event@sdl 0 intr0)
(funcend)
// picture functions --------------------------------------
(sdl_load_picture func)
	(3 mod@sdl load_picture@sdl 0 intr0)
(funcend)
(sdl_save_picture func)
	(3 mod@sdl save_picture@sdl 0 intr0)
(funcend)
(sdl_delay func)
	(3 mod@sdl delay@sdl 0 intr0)
(funcend)
// string library
//
//
(string_init func)
    (set string s modulestr@string "libl1vmstring.so")
    (set string s lenstr@string "string_len")
    (set string s copystr@string "string_copy")
    (set string s catstr@string "string_cat")
    (set string s int64tostringstr@string "string_int64_to_string")
    (set string s bytetohexstringstr@string "string_byte_to_hexstring")
    (set string s doubletostringstr@string "string_double_to_string")
	(set string s bytenumtostringstr@string "string_bytenum_to_string")
	(set string s stringtoarraystr@string "string_string_to_array")
	(set string s arraytostringstr@string "string_array_to_string")
	(set string s stringleftstr@string "string_left")
	(set string s stringrightstr@string "string_right")
	(set string s stringmidstr@string "string_mid")
	(set string s stringtostringstr@string "string_to_string")
	(set string s stringcomparestr@string "string_compare")
	(set string s stringmemtostringstr@string "stringmem_to_string")
	(set string s stringmemsearchstr@string "stringmem_search_string")
    (set int64 1 len@string 0)
    (set int64 1 copy@string 1)
    (set int64 1 cat@string 2)
    (set int64 1 int64tostring@string 3)
    (set int64 1 bytetohexstring@string 4)
    (set int64 1 doubletostring@string 5)
	(set int64 1 bytenumtostring@string 6)
	(set int64 1 stringtoarray@string 7)
	(set int64 1 arraytostring@string 8)
	(set int64 1 stringleft@string 9)
	(set int64 1 stringright@string 10)
	(set int64 1 stringmid@string 11)
	(set int64 1 stringtostring@string 12)
	(set int64 1 stringcompare@string 13)
	(set int64 1 stringmemtostring@string 14)
	(set int64 1 stringmemsearch@string 15)
    (set int64 1 mod@string 0)
    // get argument from stack
    (mod@string stpopi)
    // load string module
    (0 modulestr@stringaddr mod@string 0 intr0)
    // set functions
    (2 mod@string len@string lenstr@stringaddr intr0)
    (2 mod@string copy@string copystr@stringaddr intr0)
    (2 mod@string cat@string catstr@stringaddr intr0)
    (2 mod@string int64tostring@string int64tostringstr@stringaddr intr0)
    (2 mod@string bytetohexstring@string bytetohexstringstr@stringaddr intr0)
    (2 mod@string doubletostring@string doubletostringstr@stringaddr intr0)
	(2 mod@string bytenumtostring@string bytenumtostringstr@stringaddr intr0)
	(2 mod@string stringtoarray@string stringtoarraystr@stringaddr intr0)
	(2 mod@string arraytostring@string arraytostringstr@stringaddr intr0)
	(2 mod@string stringleft@string stringleftstr@stringaddr intr0)
	(2 mod@string stringright@string stringrightstr@stringaddr intr0)
	(2 mod@string stringmid@string stringmidstr@stringaddr intr0)
	(2 mod@string stringtostring@string stringtostringstr@stringaddr intr0)
	(2 mod@string stringcompare@string stringcomparestr@stringaddr intr0)
	(2 mod@string stringmemtostring@string stringmemtostringstr@stringaddr intr0)
	(2 mod@string stringmemsearch@string stringmemsearchstr@string intr0)
(funcend)
(string_len func)
// argument: int64 string address
// return: int64 string len
    (3 mod@string len@string 0 intr0)
(funcend)
(string_copy func)
// arguments: string source address, string destination address
    (3 mod@string copy@string 0 intr0)
(funcend)
(string_cat func)
// arguments: string source address, string destination address
    (3 mod@string cat@string 0 intr0)
(funcend)
(string_int64tostring func)
// arguments: int64 number, string source address, string len
    (3 mod@string int64tostring@string 0 intr0)
(funcend)
(string_bytetohexstring func)
// arguments: byte number, string source address, string len
    (3 mod@string bytetohexstring@string 0 intr0)
(funcend)
(string_doubletostring func)
// arguments: double number, string source address, string len
    (3 mod@string doubletostring@string 0 intr0)
(funcend)
(string_bytenumtostring func)
	(3 mod@string bytenumtostring@string 0 intr0)
(funcend)
(string_to_array func)
// args: sourceaddr, destaddr, index, stringlen, arraysize
	(3 mod@string stringtoarray@string 0 intr0)
(funcend)
(array_to_string func)
// args: sourceaddr, destaddr, index, stringlen, arraysize
	(3 mod@string arraytostring@string 0 intr0)
(funcend)
(string_left func)
// args: sourceaddr, destaddr, number of chars
	(3 mod@string stringleft@string 0 intr0)
(funcend)
(string_right func)
// args: sourceaddr, destaddr, number of chars
	(3 mod@string stringright@string 0 intr0)
(funcend)
(string_mid func)
// args: sourceaddr, destaddr, positon of char in source to copy
	(3 mod@string stringmid@string 0 intr0)
(funcend)
(string_to_string func)
// args: sourceddr, destaddr, position in dest to copy source char into
	(3 mod@string stringtostring@string 0 intr0)
(funcend)
(string_compare func)
// args: string1, string2
	(3 mod@string stringcompare@string 0 intr0)
(funcend)
(string_memtostring func)
	(3 mod@string stringmemtostring@string 0 intr0)
(funcend)
(string_memsearch func)
	(3 mod@string stringmemsearch@string 0 intr0)
(funcend)
