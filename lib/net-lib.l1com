//  net-lib.l1com
//
//  network library for TCP/IP sockets 
//
// demo waits for a telnet connection on port 3000 
// and prints ASCII code of sent char
//
(main func)
    (set int64 1 zero 0)
    (set int64 1 one 1)
 	(set int64 1 server 0)
	(set int64 1 accept 0)
	(set int64 1 portnum 3000Q)
	(set int64 1 error 0)
	(set int64 1 server_open 0)
	(set int64 1 server_accept 0)
	(set int64 1 f 0)
	(set string 10 ip "127.0.0.1")
    (set int64 1 ip_len 10)
    (set int64 1 ret 0)
    (set int64 1 f 0)
    (set string 30 buf "                             ")
    (set int64 1 bufsize 29)
    (set int64 1 socket_handle 0)
    (set int64 1 mod_net 0)
    (set int64 1 char 0)
    (set string 11 waiting "waiting...")
    (mod_net :net_init call)
    (loadreg)
    (ipaddr bufaddr :get_hostbyname call)
    (ret stpopi)
    (loadreg)
    // (:end jmp)
    ((ret zero !=) f =)
    (f :try_hostbyaddr jmpi)
    (:open_socket jmp)
    (:try_hostbyaddr)
    (ipaddr bufaddr :get_hostbyaddr call)
    (ret stpopi)
    (loadreg)
    ((ret zero !=) f =)
    (f :end jmpi)
    (:open_socket)
    (4 portnum 0 0 intr0)
    (7 0 0 0 intr0)
    (bufaddr portnum :open_server_socket call)
    (ret stpopi)
    (socket_handle stpopi)
    (loadreg)
    (6 bufaddr 0 0 intr0)
    (7 0 0 0 intr0)
    (:wait_conn)
    (6 waitingaddr 0 0 intr0)
    (7 0 0 0 intr0)
    (socket_handle :open_accept_server call)
    (ret stpopi)
    (server_accept stpopi)
    (loadreg)
    ((ret zero !=) f =)
    (f :wait_conn jmpi)
    (server_accept :socket_read_byte call)
    (ret stpopi)
    (char stpopi)
    (loadreg)
    (server_accept :close_accept_server call)
    (loadreg)
    (socket_handle :close_server_socket call)
    (loadreg)
    (4 char 0 0 intr0)
    (7 0 0 0 intr0)
    (1 mod_net 0 0 intr0)
    (:end)
    (255 0 0 0 intr0)
(funcend)
// net library
//
//
(net_init func)
	(set string 14 modulestr@net "libl1vmnet.so")
    (set string 14 initstr@net "init_sockets")
    (set string 20 open_server_socketstr@net "open_server_socket")
    (set string 19 open_accept_serverstr@net "open_accept_server")
    (set string 21 open_client_socketstr@net "open_client_socket")
    (set string 20 close_server_socketstr@net "close_server_socket")
    (set string 21 close_accept_serverstr@net "close_accept_server")
    (set string 21 close_client_socketstr@net "close_client_socket")
    (set string 15 get_clientaddrstr@net "get_clientaddr")
    (set string 13 get_hostnamestr@net "get_hostname")
    (set string 16 get_hostbynamestr@net "get_hostbyname")
    (set string 16 get_hostbyaddrstr@net "get_hostbyaddr")
    (set string 18 socket_read_bytestr@net "socket_read_byte")
    (set string 19 socket_write_bytestr@net "socket_write_byte")
    (set int64 1 init@net 0)
    (set int64 1 open_server_socket@net 1)
    (set int64 1 open_accept_server@net 2)
    (set int64 1 open_client_socket@net 3)
	(set int64 1 close_server_socket@net 4)
	(set int64 1 close_accept_server@net 5)
	(set int64 1 close_client_socket@net 6)
	(set int64 1 get_clientaddr@net 7)
	(set int64 1 get_hostname@net 8)
	(set int64 1 get_hostbyname@net 9)
	(set int64 1 get_hostbyaddr@net 10)
	(set int64 1 socket_read_byte@net 11)
	(set int64 1 socket_write_byte@net 12)
	(set int64 1 mod@net 0)
	// get arguments from stack
	(mod@net stpopi)
	// load net module
    (0 modulestr@netaddr mod@net 0 intr0)
	// set functions
    (2 mod@net init@net initstr@netaddr intr0)
	(2 mod@net open_server_socket@net open_server_socketstr@netaddr intr0)
	(2 mod@net open_accept_server@net open_accept_serverstr@netaddr intr0)
	(2 mod@net open_client_socket@net open_client_socketstr@netaddr intr0)
	(2 mod@net close_server_socket@net close_server_socketstr@netaddr intr0)
	(2 mod@net close_accept_server@net close_accept_serverstr@netaddr intr0)
	(2 mod@net close_client_socket@net close_client_socketstr@netaddr intr0)
	(2 mod@net get_clientaddr@net get_clientaddrstr@netaddr intr0)
	(2 mod@net get_hostname@net get_hostnamestr@netaddr intr0)
	(2 mod@net get_hostbyname@net get_hostbynamestr@netaddr intr0)
	(2 mod@net get_hostbyaddr@net get_hostbyaddrstr@netaddr intr0)
	(2 mod@net socket_read_byte@net socket_read_bytestr@netaddr intr0)
	(2 mod@net socket_write_byte@net socket_write_bytestr@netaddr intr0)
	// init library
	(3 mod@net init@net 0 intr0)
(funcend)
// wrapper functions
(open_server_socket func)
    (3 mod@net open_server_socket@net 0 intr0)
(funcend)
(open_accept_server func)
    (3 mod@net open_accept_server@net 0 intr0)
(funcend)
(open_client_socket func)
    (3 mod@net open_client_socket@net 0 intr0)
(funcend)
(close_server_socket func)
    (3 mod@net close_server_socket@net 0 intr0)
(funcend)
(close_accept_server func)
    (3 mod@net close_accept_server@net 0 intr0)
(funcend)
(close_client_socket func)
    (3 mod@net close_client_socket@net 0 intr0)
(funcend)
(get_clientaddr func)
    (3 mod@net get_clientaddr@net 0 intr0)
(funcend)
(get_hostname func)
    (3 mod@net get_hostname@net 0 intr0)
(funcend)
(get_hostbyname func)
    (3 mod@net get_hostbyname@net 0 intr0)
(funcend)
(get_hostbyaddr func)
    (3 mod@net get_hostbyaddr@net 0 intr0)
(funcend)
(socket_read_byte func)
    (3 mod@net socket_read_byte@net 0 intr0)
(funcend)
(socket_write_byte func)
    (3 mod@net socket_write_byte@net 0 intr0)
(funcend)
