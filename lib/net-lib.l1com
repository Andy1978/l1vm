//  net-lib.l1com
//
//  network library for TCP/IP sockets
//
// demo waits for a telnet connection on port 3000
// and prints ASCII code of sent char
//
//  NEW: added functions for connecting with libl1vm-data database
//
(main func)
    (set int64 1 zero 0)
    (set int64 1 one 1)
 	(set int64 1 server 0)
	(set int64 1 accept 0)
	(set int64 1 portnum 3000Q)
	(set int64 1 error 0)
	(set int64 1 server_open 0)
	(set int64 1 server_accept 0)
	(set int64 1 f 0)
	(set string 10 ip "127.0.0.1")
    (set int64 1 ip_len 10)
    (set int64 1 ret 0)
    (set int64 1 f 0)
    (set string 30 buf "                             ")
    (set int64 1 bufsize 29)
    (set int64 1 socket_handle 0)
    (set int64 1 mod_net 0)
    (set int64 1 char 0)
    (set string 11 waiting "waiting...")
	(set string s netinitstr "error: can't init networking sockets!")
    (mod_net one :net_init call)
	(ret stpopi)
	(loadreg)
	(((ret zero !=) f =) f if)
		// ERROR can't allocate memory
		(6 netinitstr 0 0 intr0)
		(7 0 0 0 intr0)
		(255 one 0 0 intr0)
	(endif)
    (ipaddr bufaddr :get_hostbyname call)
    (ret stpopi)
    (loadreg)
    // (:end jmp)
    ((ret zero !=) f =)
    (f :try_hostbyaddr jmpi)
    (:open_socket jmp)
    (:try_hostbyaddr)
    (ipaddr bufaddr :get_hostbyaddr call)
    (ret stpopi)
    (loadreg)
    ((ret zero !=) f =)
    (f :end jmpi)
    (:open_socket)
    (4 portnum 0 0 intr0)
    (7 0 0 0 intr0)
    (bufaddr portnum :open_server_socket call)
    (ret stpopi)
    (socket_handle stpopi)
    (loadreg)
    (6 bufaddr 0 0 intr0)
    (7 0 0 0 intr0)
    (:wait_conn)
    (6 waitingaddr 0 0 intr0)
    (7 0 0 0 intr0)
    (socket_handle :open_accept_server call)
    (ret stpopi)
    (server_accept stpopi)
    (loadreg)
	(4 portnum 0 0 intr0)
	(7 0 0 0 intr0)
    ((ret zero !=) f =)
    (server_accept :socket_read_byte call)
	(4 portnum 0 0 intr0)
	(7 0 0 0 intr0)
    (ret stpopi)
    (char stpopi)
    (loadreg)
    (server_accept :close_accept_server call)
    (loadreg)
    (socket_handle :close_server_socket call)
    (loadreg)
    (7 0 0 0 intr0)
	(:socket_free_mem call)
	(loadreg)
    (1 mod_net 0 0 intr0)
    (:end)
    (255 0 0 0 intr0)
(funcend)
#include <net-lib.l1h>
