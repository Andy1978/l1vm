// file library module
// test program
//
//
(main func)
    (set int64 1 zero 0Q)
    (set int64 1 handle 0)
    (set int64 1 num 12345678Q)
    (set int64 1 read 0)
    (set string 10 filename "test-file")
    (set string 13 hellostr "Hello world!")
    (set string 30 readstr "")
    (set int64 1 readlen 29)
    (set byte 1 newline 10)
    (set byte 1 mode_write 2)
    (set byte 1 mode_read 1)
    (set int64 1 error 0)
    (zero :file_init call)
    (loadreg)
    // write data -----------------------------------------
    (handle mode_write filenameaddr :file_open call)
    (error stpopi)
    (loadreg)
    (handle num :file_put_int64 call)
    (error stpopi)
    (loadreg)
    (handle hellostraddr :file_put_string call)
    (error stpopi)
    (loadreg)
    (handle newline :file_putc call)
    (error stpopi)
    (handle :file_close call)
    (loadreg)
    // read data ------------------------------------------
    (handle mode_read filenameaddr :file_open call)
    (error stpopi)
    (loadreg)
    (handle :file_get_int64 call)
    (error stpopi)
    (read stpopi)
    (loadreg)
    (4 read 0 0 intr0)
    (7 0 0 0 intr0)
    (handle readstraddr readlen :file_get_string call)
    (error stpopi)
    (loadreg)
    (6 readstraddr 0 0 intr0)
    (7 0 0 0 intr0)
    (handle :file_close call)
    (loadreg)
    // close file module
    (1 zero 0 0 intr0)
    (255 0 0 0 intr0)
(funcend)
// file library
//
//
(file_init func)
    (set string 15 modulestr@file "libl1vmfile.so")
    (set string 10 openstr@file "file_open")
    (set string 11 closestr@file "file_close")
    (set string 10 seekstr@file "file_seek")
    (set string 10 putcstr@file "file_putc")
    (set string 10 getcstr@file "file_getc")
    (set string 15 put_int16str@file "file_put_int16")
    (set string 15 get_int16str@file "file_get_int16")
    (set string 15 put_int32str@file "file_put_int32")
    (set string 15 get_int32str@file "file_get_int32")
    (set string 15 put_int64str@file "file_put_int64")
    (set string 15 get_int64str@file "file_get_int64")
    (set string 16 put_doublestr@file "file_put_double")
    (set string 16 get_doublestr@file "file_get_double")
    (set string 16 put_stringstr@file "file_put_string")
    (set string 16 get_stringstr@file "file_get_string")
	(set string s fileinitstr@file "file_init_state")
    (set int64 1 open@file 0)
    (set int64 1 close@file 1)
    (set int64 1 seek@file 2)
    (set int64 1 putc@file 3)
    (set int64 1 getc@file 4)
    (set int64 1 put_int16@file 5)
    (set int64 1 get_int16@file 6)
    (set int64 1 put_int32@file 7)
    (set int64 1 get_int32@file 8)
    (set int64 1 put_int64@file 9)
    (set int64 1 get_int64@file 10)
    (set int64 1 put_double@file 11)
    (set int64 1 get_double@file 12)
    (set int64 1 get_string@file 13)
    (set int64 1 put_string@file 14)
	(set int64 1 fileinit@file 15)
    (set int64 1 mod@file 0)
    // get arguments from stack
    (mod@file stpopi)
    // load file module
    (0 modulestr@fileaddr mod@file 0 intr0)
    // set functions
    (2 mod@file open@file openstr@fileaddr intr0)
    (2 mod@file close@file closestr@fileaddr intr0)
    (2 mod@file seek@file seekstr@fileaddr intr0)
    (2 mod@file putc@file putcstr@fileaddr intr0)
    (2 mod@file getc@file getcstr@fileaddr intr0)
    (2 mod@file put_int16@file put_int16str@fileaddr intr0)
    (2 mod@file get_int16@file get_int16str@fileaddr intr0)
    (2 mod@file put_int32@file put_int32str@fileaddr intr0)
    (2 mod@file get_int32@file get_int32str@fileaddr intr0)
    (2 mod@file put_int64@file put_int64str@fileaddr intr0)
    (2 mod@file get_int64@file get_int64str@fileaddr intr0)
    (2 mod@file put_double@file put_doublestr@fileaddr intr0)
    (2 mod@file get_double@file get_doublestr@fileaddr intr0)
    (2 mod@file put_string@file put_stringstr@fileaddr intr0)
    (2 mod@file get_string@file get_stringstr@fileaddr intr0)
	(2 mod@file fileinit@file fileinitstr@fileaddr intr0)
	// call init file function
	(3 mod@file fileinit@file 0 intr0)
(funcend)
// wrapper functions
(file_open func)
    (3 mod@file open@file 0 intr0)
(funcend)
(file_close func)
    (3 mod@file close@file 0 intr0)
(funcend)
(file_seek func)
    (3 mod@file seek@file 0 intr0)
(funcend)
// binary put/get access
//
// byte
(file_putc func)
    (3 mod@file putc@file 0 intr0)
(funcend)
(file_getc func)
    (3 mod@file getc@file 0 intr0)
(funcend)
// int16
(file_put_int16 func)
    (3 mod@file put_int16@file 0 intr0)
(funcend)
(file_get_int16 func)
    (3 mod@file get_int16@file 0 intr0)
(funcend)
// int32
(file_put_int32 func)
    (3 mod@file put_int32@file 0 intr0)
(funcend)
(file_get_int32 func)
    (3 mod@file get_int32@file 0 intr0)
(funcend)
// int64
(file_put_int64 func)
    (3 mod@file put_int64@file 0 intr0)
(funcend)
(file_get_int64 func)
    (3 mod@file get_int64@file 0 intr0)
(funcend)
// double
(file_put_double func)
    (3 mod@file put_double@file 0 intr0)
(funcend)
(file_get_double func)
    (3 mod@file get_double@file 0 intr0)
(funcend)
// put/get strings
(file_put_string func)
    (3 mod@file put_string@file 0 intr0)
(funcend)
// read newline separated strings
(file_get_string func)
    (3 mod@file get_string@file 0 intr0)
(funcend)
