// int-wrapper.l1com
//
// interrupt wrapper library
// showing time and date demo
//
(main func)
    (set int64 1 zero 0)
    (set int64 1 one 1)
    (set int64 1 year 0)
    (set int64 1 month 0)
    (set int64 1 day 0)
    (set int64 1 hour 0)
    (set int64 1 min 0)
    (set int64 1 sec 0)
    (set int64 1 f 0)
    (set int64 1 ten 10)
    (set string s space " ")
    (set string s slash "/")
    (set string s colon ":")
    // print current date
    (:date call)
    (year stpopi)
    (month stpopi)
    (day stpopi)
    (loadreg)
    (((day ten <) f =) f if)
        (zero :printi call)
        (loadreg)
    (endif)
    (day :printi call)
    (loadreg)
    (slash :prints call)
    (loadreg)
    (((month ten <) f =) f if)
        (zero :printi call)
        (loadreg)
    (endif)
    (month :printi call)
    (loadreg)
    (slash :prints call)
    (loadreg)
    (year :printi call)
    (loadreg)
    (space :prints call)
    // print current time
    (:time call)
    (hour stpopi)
    (min stpopi)
    (sec stpopi)
    (((hour ten <) f =) f if)
        (zero :printi call)
        (loadreg)
    (endif)
    (hour :printi call)
    (loadreg)
    (colon :prints call)
    (loadreg)
    (((min ten <) f =) f if)
        (zero :printi call)
        (loadreg)
    (endif)
    (min :printi call)
    (loadreg)
    (colon :prints call)
    (loadreg)
    (((sec ten <) f =) f if)
        (zero :printi call)
        (loadreg)
    (endif)
    (sec :printi call)
    (loadreg)
    (:printn call)
    (loadreg)
    // exit
    (255 0 0 0 intr0)
(funcend)
//
// interrupt 0 wrapper functions
//
(printi func)
    (set int64 1 i@printi)
    (i@printi stpopi)
    (4 i@printi 0 0 intr0)
(funcend)
(printd func)
    (set double 1 i@printd)
    (i@printd stpopd)
    (5 i@printd 0 0 intr0)
(funcend)
(prints func)
    (set int64 1 str@prints)
    (str@prints stpopi)
    (6 str@prints 0 0 intr0)
(funcend)
(printn func)
    (7 0 0 0 intr0)
(funcend)
(delay func)
    (set int64 1 delaytime@delay)
    (delaytime@delay stpopi)
    (8 delaytime@delay 0 0 intr0)
(funcend)
(inputi func)
    (set int64 1 i@inputi)
    (i@inputi stpopi)
    (9 i@inputi 0 0 intr0)
    (i@inputi stpushi)
(funcend)
(inputd func)
    (set double 1 i@inputd)
    (i@inputd stpopd)
    (10 i@inputd 0 0 intr0)
    (i@inputd stpushd)
(funcend)
(inputs func)
    (set int64 1 str@inputs)
    (str@inputs stpopi)
    (11 str@inputs 0 0 intr0)
(funcend)
(shell_args func)
    (set int64 1 args@shell_args)
    (12 args@shell_args 0 0 intr0)
    (args@shell_args stpushi)
(funcend)
(shell_get func)
    (set int64 1 arg@shell_get)
    (set int64 1 str@shell_get)
    (str@shell_get stpopi)
    (arg@shell_get stpopi)
    (12 arg@shell_get str@shell_get 0 intr0)
(funcend)
(show_stackp func)
    (14 0 0 0 intr0)
(funcend)
(cpu_cores func)
    (set int64 1 cores@cpu_cores)
    (15 cores@cpu_cores 0 0 intr0)
    (cores@cpu_cores stpushi)
(funcend)
(get_endianess func)
    (set int64 1 endianess@get_endianess)
    (16 endianess@get_endianess 0 0 intr0)
    (endianess@get_endianess stpushi)
(funcend)
(time func)
    (set int64 1 hour@time)
    (set int64 1 min@time)
    (set int64 1 sec@time)
    (17 hour@time min@time sec@time intr0)
    (sec@time stpushi)
    (min@time stpushi)
    (hour@time stpushi)
    // on stack: hour, min, sec
(funcend)
(date func)
    (set int64 1 year@date)
    (set int64 1 month@date)
    (set int64 1 day@date)
    (18 year@date month@date day@date intr0)
    (day@date stpushi)
    (month@date stpushi)
    (year@date stpushi)
    // on stack: year, month, day
(funcend)
(date_weekday func)
    (set int64 1 weekday@date_weekday)
    (19 weekday@date_weekday 0 0 intr0)
    (weekday@date_weekday stpushi)
(funcend)
(printi_format func)
    (set int64 1 i@printi_format)
    (set int64 1 str@printi_format)
    (str@printi_format stpopi)
    (i@printi_format stpopi)
    (20 i@printi_format str@printi_format 0 intr0)
(funcend)
(printd_format func)
    (set int64 1 i@printd_format)
    (set int64 1 str@printd_format)
    (str@printd_format stpopi)
    (i@printd_format stpopi)
    (20 i@printd_format str@printd_format 0 intr0)
(funcend)
(print_int16 func)
    (set int64 1 i@printi_int16)
    (i@printi_int16 stpopi)
    (22 i@printi_int16 0 0 intr0)
(funcend)
(print_int32 func)
    (set int64 1 i@printi_int32)
    (i@printi_int32 stpopi)
    (23 i@printi_int32 0 0 intr0)
(funcend)
