// intr-wrapper.l1com
//
// interrupt wrapper library
// showing time and date demo
//
(main func)
    (set int64 1 zero 0)
    (set int64 1 one 1)
    (set int64 1 year 0)
    (set int64 1 month 0)
    (set int64 1 day 0)
    (set int64 1 hour 0)
    (set int64 1 min 0)
    (set int64 1 sec 0)
    (set int64 1 f 0)
    (set int64 1 ten 10)
    (set string s space " ")
    (set string s slash "/")
    (set string s colon ":")
    // print current date
    (:date call)
    (year stpopi)
    (month stpopi)
    (day stpopi)
    (loadreg)
    (((day ten <) f =) f if)
        (zero :printi call)
        (loadreg)
    (endif)
    (day :printi call)
    (loadreg)
    (slash :prints call)
    (loadreg)
    (((month ten <) f =) f if)
        (zero :printi call)
        (loadreg)
    (endif)
    (month :printi call)
    (loadreg)
    (slash :prints call)
    (loadreg)
    (year :printi call)
    (loadreg)
    (space :prints call)
    // print current time
    (:time call)
    (hour stpopi)
    (min stpopi)
    (sec stpopi)
    (loadreg)
    (((hour ten <) f =) f if)
        (zero :printi call)
        (loadreg)
    (endif)
    (hour :printi call)
    (loadreg)
    (colon :prints call)
    (loadreg)
    (((min ten <) f =) f if)
        (zero :printi call)
        (loadreg)
    (endif)
    (min :printi call)
    (loadreg)
    (colon :prints call)
    (loadreg)
    (((sec ten <) f =) f if)
        (zero :printi call)
        (loadreg)
    (endif)
    (sec :printi call)
    (loadreg)
    (:printn call)
    (loadreg)
    // exit
    (zero :exit call)
(funcend)
#include <intr-wrapper.l1h>
