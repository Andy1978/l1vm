// mpfr math library
// This will be updated in the future.
// Some trigonometry functions are already here...
//
(main func)
    (set int64 1 zero 0)
	(set int64 1 xaddr 0)
	(set int64 1 yaddr 1)
	(set int64 1 resaddr 2)
	(set string s xstr "3.14159265358979323846")
	(set string s ystr "42.0")
	(set string s resstr "0.0")
	(set string s formatstr "%.20Ff")
	(set string 256 outstr "")
	(set int64 1 outstr_len 255)
	(set int64 1 one 1)
	(set int64 1 base 10)
	(set int64 1 precision 50)
	(zero :gmp_math_init call)
	(loadreg)
	// set variables
	(xstraddr base xaddr :gmp_set_float call)
	(loadreg)
	(ystraddr base yaddr :gmp_set_float call)
	(loadreg)
	(resstraddr base resaddr :gmp_set_float call)
	(loadreg)
	(xaddr yaddr resaddr :gmp_mul_float call)
	(loadreg)
	(resaddr formatstraddr precision :gmp_print_float call)
	(loadreg)
	(7 0 0 0 intr0)
	(resaddr outstraddr outstr_len formatstr precision :gmp_prints_float call)
	(loadreg)
	(6 outstr 0 0 intr0)
	(7 0 0 0 intr0)
	(:gmp_cleanup call)
	(loadreg)
	(1 zero 0 0 intr0)
	(255 zero 0 0 intr0)
(funcend)
// gmp math library
//
//
(gmp_math_init func)
    (set string s modulestr@gmp "libl1vmmpfr.so")
	(set string s cleanupstr@gmp "gmp_cleanup")
	(set string s set_floatstr@gmp "gmp_set_float")
	(set string s add_floatstr@gmp "gmp_add_float")
	(set string s sub_floatstr@gmp "gmp_sub_float")
	(set string s mul_floatstr@gmp "gmp_mul_float")
	(set string s div_floatstr@gmp "gmp_div_float")
	(set string s print_floatstr@gmp "gmp_print_float")
	(set string s prints_floatstr@gmp "gmp_prints_float")
	// trigonometry functions:
	(set string s cosstr@gmp "gmp_cos_float")
	(set string s sinstr@gmp "gmp_sin_float")
	(set string s tanstr@gmp "gmp_tan_float")
	(set string s secstr@gmp "gmp_sec_float")
	(set string s cscstr@gmp "gmp_csc_float")
	(set string s cotstr@gmp "gmp_cot_float")
	(set string s acosstr@gmp "gmp_acos_float")
	(set string s asinstr@gmp "gmp_asin_float")
	(set string s atanstr@gmp "gmp_atan_float")
	(set string s atan2str@gmp "gmp_atan2_float")
	(set string s acotstr@gmp "gmp_acot_float")
	(set string s asecstr@gmp "gmp_asec_float")
	(set string s acscstr@gmp "gmp_acsc_float")
	(set int64 1 cleanup@gmp 0)
	(set int64 1 set_float@gmp 1)
	(set int64 1 add_float@gmp 2)
	(set int64 1 sub_float@gmp 3)
	(set int64 1 mul_float@gmp 4)
	(set int64 1 div_float@gmp 5)
	(set int64 1 print_float@gmp 6)
	(set int64 1 prints_float@gmp 7)
	(set int64 1 cos@gmp 8)
	(set int64 1 sin@gmp 9)
	(set int64 1 tan@gmp 10)
	(set int64 1 sec@gmp 11)
	(set int64 1 csc@gmp 12)
	(set int64 1 cot@gmp 13)
	(set int64 1 acos@gmp 14)
	(set int64 1 asin@gmp 15)
	(set int64 1 atan@gmp 16)
	(set int64 1 atan2@gmp 17)
	(set int64 1 acot@gmp 18)
	(set int64 1 asec@gmp 19)
	(set int64 1 acsc@gmp 20)
	(set int64 1 mod@gmp 0)
	// get argument from stack
    (mod@gmp stpopi)
    // load math module
    (0 modulestr@gmpaddr mod@gmp 0 intr0)
	// set functions
	(2 mod@gmp cleanup@gmp cleanupstr@gmpaddr intr0)
	(2 mod@gmp set_float@gmp set_floatstr@gmpaddr intr0)
	(2 mod@gmp add_float@gmp add_floatstr@gmpaddr intr0)
	(2 mod@gmp sub_float@gmp sub_floatstr@gmpaddr intr0)
	(2 mod@gmp mul_float@gmp mul_floatstr@gmpaddr intr0)
	(2 mod@gmp div_float@gmp div_floatstr@gmpaddr intr0)
	(2 mod@gmp print_float@gmp print_floatstr@gmpaddr intr0)
	(2 mod@gmp prints_float@gmp prints_floatstr@gmpaddr intr0)
	(2 mod@gmp cos@gmp cosstr@gmpaddr intr0)
	(2 mod@gmp sin@gmp sinstr@gmpaddr intr0)
	(2 mod@gmp tan@gmp tanstr@gmpaddr intr0)
	(2 mod@gmp sec@gmp secstr@gmpaddr intr0)
	(2 mod@gmp csc@gmp cscstr@gmpaddr intr0)
	(2 mod@gmp cot@gmp cotstr@gmpaddr intr0)
	(2 mod@gmp acos@gmp acosstr@gmpaddr intr0)
	(2 mod@gmp asin@gmp asinstr@gmpaddr intr0)
	(2 mod@gmp atan@gmp atanstr@gmpaddr intr0)
	(2 mod@gmp atan2@gmp atan2str@gmpaddr intr0)
	(2 mod@gmp acot@gmp acotstr@gmpaddr intr0)
	(2 mod@gmp asec@gmp asecstr@gmpaddr intr0)
	(2 mod@gmp acsc@gmp acscstr@gmpaddr intr0)
(funcend)
// wrapper functions
(gmp_cleanup func)
 	(3 mod@gmp cleanup@gmp 0 intr0)
(funcend)
(gmp_set_float func)
 	(3 mod@gmp set_float@gmp 0 intr0)
(funcend)
(gmp_add_float func)
	(3 mod@gmp add_float@gmp 0 intr0)
(funcend)
(gmp_sub_float func)
	(3 mod@gmp sub_float@gmp 0 intr0)
(funcend)
(gmp_mul_float func)
	(3 mod@gmp mul_float@gmp 0 intr0)
(funcend)
(gmp_div_float func)
	(3 mod@gmp div_float@gmp 0 intr0)
(funcend)
(gmp_print_float func)
 	(3 mod@gmp print_float@gmp 0 intr0)
(funcend)
(gmp_prints_float func)
 	(3 mod@gmp prints_float@gmp 0 intr0)
(funcend)
(gmp_cos_float func)
 	(3 mod@gmp cos@gmp 0 intr0)
(funcend)
(gmp_sin_float func)
 	(3 mod@gmp sin@gmp 0 intr0)
(funcend)
(gmp_tan_float func)
 	(3 mod@gmp tan@gmp 0 intr0)
(funcend)
(gmp_sec_float func)
 	(3 mod@gmp sec@gmp 0 intr0)
(funcend)
(gmp_csc_float func)
 	(3 mod@gmp csc@gmp 0 intr0)
(funcend)
(gmp_cot_float func)
 	(3 mod@gmp cot@gmp 0 intr0)
(funcend)
(gmp_acos_float func)
 	(3 mod@gmp acos@gmp 0 intr0)
(funcend)
(gmp_asin_float func)
 	(3 mod@gmp asin@gmp 0 intr0)
(funcend)
(gmp_atan_float func)
 	(3 mod@gmp atan@gmp 0 intr0)
(funcend)
(gmp_atan2_float func)
 	(3 mod@gmp atan2str@gmp 0 intr0)
(funcend)
(gmp_acot_float func)
 	(3 mod@gmp acot@gmp 0 intr0)
(funcend)
(gmp_asec_float func)
 	(3 mod@gmp asec@gmp 0 intr0)
(funcend)
(gmp_acsc_float func)
 	(3 mod@gmp acsc@gmp 0 intr0)
(funcend)
