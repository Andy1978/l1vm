// data section
.data
	Q, 1, max
	@, 0, 10Q
	Q, 1, one
	@, 8, 1Q
	Q, 1, zero
	@, 16, 0Q
	Q, 1, delay
	@, 24, 10Q
	Q, 1, messageaddr
	@, 32, 40Q
	B, 256, message
	@, 40, ""
.dend
// code section
.code
	loada, max, 0, I1
	loada, one, 0, I0
	loada, zero, 0, I11
	intr0, 12, I10, 0, 0
	// if no argument given, EXIT
	neqi, I10, I0, I2
	jmpi, I2, :end
	// get argumnet string
	loada, messageaddr, 0, I50
	intr0, 13, I11, I50, 0
	loada delay, 0, I30
:loop
	loadl, :print, I10
	intr1, 0, I10, 0, 0
	intr0 8, I30, 0, 0
	inclsijmpi, I0, I1, :loop
	// join threads
	intr1, 1, 0, 0, 0
	// exit
:end
	intr0, 255, 0, 0, 0
	// run as thread function
:print
	loada, messageaddr, 0, I50
	intr0, 6, I50, 0, 0
	intr0, 7, 0, 0, 0
	intr0, 255, 0, 0, 0
.cend
