	// gnome sort demo
	// sorting number data
	//
	// data section
.data
	Q, 1, i
	@, 0, 1Q
	Q, 1, zero
	@, 8, 0Q
	Q, 1, maxnum
	@, 16, 10000Q
	Q, 1, offset
	@, 24, 8Q
	Q, 1, arrayoffs
	@, 32, 100Q
	B, 52, message
	@, 40, "l1vm gnome  sort demo by Stefan Pietzonke (C) 2017"
	Q, 1, messageaddr
	@, 92, 40Q
	Q, 10000Q, array
	@, 100, 0Q
.dend
	// code section
.code
	loada, maxnum, 0, I0
	loada, zero, 0, I1
	loada, maxnum, 0, I2
	loada, arrayoffs, 0, I3
	loada, i, 0, I4
	loada, offset, 0, I32
	loada, zero, 0, I30
:initarray
	pullqw, I2, I3, I30
	subi, I2, I4, I2
	addi, I30, I32, I30
	inclsijmpi, I1, I0, :initarray
	// sort
	// run sort loop as long as I10 = 0
	loada, maxnum, 0, I41
	loada, i, 0, I1
	subi, I41, I1, I41
	loada, zero, 0, I60
	loada, i, 0, I61
	loada, offset, 0, I62
	loada, arrayoffs, 0, I3
:start-sort
	movi, I60, I0
	loada, maxnum, 0, I41
	movi, I60, I42
:sort-loop
	eqi, I42, I60, I20
	jmpi, I20, :if
	muli, I42, I62, I12
	subi, I12, I62, I11
	pushqw, I3, I11, I15
	pushqw, I3, I12, I16
	gri, I15, I16, I20
	jmpi I20, :else
:if
	addi, I42, I61, I42
	jmp :endif
:else
	pullqw, I16, I3, I11
	pullqw, I15, I3, I12
	subi, I42, I61, I42
:endif
	lsi, I42, I41, I20
	jmpi, I20, :sort-loop
:sort-end
	// print sorted array
	loada, zero, 0, I9
	loada, arrayoffs, 0, I3
	loada, zero, 0, I40
	loada, maxnum, 0, I0
:loop
	pushqw, I3, I9, I20
	intr0, 4, I20, 0, 0
	addi, I9, I32, I9
	inclsijmpi, I40, I0, :loop
	loada, messageaddr, 0, I50
	intr0, 6, I50, 0, 0
	intr0, 7, 0, 0, 0
	intr0, 255, 0, 0, 0
.cend
