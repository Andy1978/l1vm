	// bubble sort demo
	// sorting number data
	//
	// data section
.data
	Q, 1, i
	@, 0, 1Q
	Q, 1, zero
	@, 8, 0Q
	Q, 1, maxnum
	@, 16, 100000Q
	Q, 1, offset
	@, 24, 8Q
	Q, 1, arrayoffs
	@, 32, 100Q
	B, 52, message
	@, 40, "l1vm bubble sort demo by Stefan Pietzonke (C) 2017"
	Q, 1, messageaddr
	@, 92, 40Q
	Q, 100000Q, array
	@, 100, 0Q
.dend
	// code section
.code
	loada, maxnum, 0, I0
	loada, i, 0, I1
	loada, maxnum, 0, I2
	loada, arrayoffs, 0, I3
	loada, i, 0, I4
	loada, offset, 0, I32
	loada, zero, 0, I30
:initarray
	pullqw, I2, I3, I30
	subi, I2, I4, I2
	addi, I30, I32, I30
//	intr0, 4, I2, 0, 0
	inclsijmpi, I1, I0, :initarray
	// sort
	// run sort loop as long as I10 = 0
	loada, maxnum, 0, I41
	loada, i, 0, I1
	subi, I41, I1, I41
	loada, zero, 0, I60
	loada, i, 0, I61
	loada, offset, 0, I62
	loada, arrayoffs, 0, I63
:start-sort
//	intr0, 4, I41, 0, 0
	movi, I60, I10
	movi, I61, I1
	// zero
	movi, I60, I9
	movi, I60, I11
	movi, I62, I12
	movi, I63, I3
	movi, I60, I40
:sort-loop
	pushqw, I3, I11, I13
	pushqw, I3, I12, I14
	lseqi, I13, I14, I20
	jmpi, I20, :skip-swap
	pullqw, I14, I3, I11
	pullqw, I13, I3, I12
	// set I10 to 1 = did swap
	movi, I61, I10
:skip-swap
//	loada, offset, 0, I32
//	loada, i, 0, I1
	addi, I11, I32, I11
	addi, I12, I32, I12
	addi, I40, I1, I40
//	intr0, 4, I40, 0, 0
//	loada, maxnum, 0, I0
	lsi, I40, I41, I21
	jmpi, I21, :sort-loop
	subi, I41, I1, I41
	loada, zero, 0, I9
	neqi, I10, I9, I20
	jmpi, I20, :start-sort
	// print sorted array
	loada, zero, 0, I9
	loada, arrayoffs, 0, I3
	loada, zero, 0, I40
	loada, maxnum, 0, I0
:loop
//	intr0, 4, I40, 0, 0
//	intr0, 7, 0, 0, 0
	pushqw, I3, I9, I20
	intr0, 4, I20, 0, 0
	intr0, 7, 0, 0, 0
	addi, I9, I32, I9
	inclsijmpi, I40, I0, :loop
	loada, messageaddr, 0, I50
	intr0, 6, I50, 0, 0
	intr0, 7, 0, 0, 0
	intr0, 255, 0, 0, 0
.cend
