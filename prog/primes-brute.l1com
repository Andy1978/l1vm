// primes-brute.l1com - check if a number is prime or not
// run without sieve of Eratosthenes
// using brute force trial division with modulo
//
(main func)
	(set int64 1 zero 0)
	(set int64 1 one 1)
	(set int64 1 two 2)
	(set int64 1 f 0)
	(set int64 1 i 1)
	(set int64 1 max_num 100)
	(set int64 1 num 2)
	(set int64 1 mod 0)
	(set int64 1 isprime 1)
	// print first prime 2
	(4 two 0 0 intr0)
	(7 0 0 0 intr0)
	(for-loop)
	(((num max_num <) f =) f for)
		(one isprime =)
		(two i =)
		(for-loop)
		(((i num <) f =) f for)
			((num i %) mod =)
			(((mod zero ==) f =) f if)
				(zero isprime =)
				(:next_jump jmp)
			(endif)
			((i one +) i =)
		(next)
		(:next_jump)
		(((isprime one ==) f =) f if)
			(4 num 0 0 intr0)
			(7 0 0 0 intr0)
		(endif)
		(reset-reg)
		((num one +) num =)
	(next)
	(7 0 0 0 intr0)
	(255 zero 0 0 intr0)
(funcend)
