L1VM - (0.9.10)
New: global.h include: MATH_LIMITS define, sets if integer math overflow is handled
by an exception or not.
See prog/math-overflow.

New: math overflow detection on double floating point numbers. See include/global.h!

-- Stefan Pietzonke <jay-t@gmx.net>  Sun Sep 15 2019 14:00 +0200


L1VM - (0.9.9)
New: if and if+ optimization in bracket compiler added:
just add this line into your bracket program:

(optimize-if)

This leaves out some instructions in the assembly output, resulting in a speedup.

New: Added clang toolchain in: clang-8.0.1. Just use the bash script there.
It downloads, compiles and installs clang to your /home directory in: l1vm-clang.
There is no root right needed to install!
The makefiles are copied at the script end.

New: added run time sense check into the VM for S8 and F8 variable types to be 64 bit big.
It will stop the VM if something was broken during compilation.

New: process-lib in libs directory: for running processes via system call.

New: assembler now shows the size of the created obj. file.

New: compiler stops if undefined labels are found.

New: OSV capstan build directory: build L1VM for OSV unikernel.
New: VM: INTR0 and INTR1 default switch is to print error message if interrupt number is not right.
New: VM shows the used C compiler and version number.
New: SANDBOX file root access in /home directory.

-- Stefan Pietzonke <jay-t@gmx.net>  Tue Sep 10 2019 20:00 +0200


L1VM - (0.9.8)
New: if+, else, endif in compiler l1com.
So finally here is "else" in "if+". :)

New: do/while loops! See prog/hello-while.l1com.
New: for/next loops! See prog/hello-for.l1com.

New: vm/main.c removed MEMCHECK, now all memory access checks are done by memory_bounds() function.

The header vor object code files changed to the more friendly:
C0DEBABE00002019

So in order to run older programs you have to recompile them!

New: two scripts in prog/ directory:
compile.sh to compile and assemble programs:
$ ./compile.sh foobar

And "build-all.sh" to compile and assemble all programs in prog/ directory.
Bugfix: memory_bounds memory access checker now should work!

-- Stefan Pietzonke <jay-t@gmx.net>  Tue Aug 6 2019 11:35 +0200


L1VM - (0.9.7)
New: check if variable is array on array access assign.
New: compiler now prints error message if used variables are not defined.

Added VM quiet mode: "-q" bash flag, if set no startup messages are shown.
See "silent_run" runtime flag.

Bugfix: compiler array size check now uses int64 for sizes!
New: prog/primes.l1com - Sieve of Eratosthenes prime number search.

New: assembler: "-pack" flag: creates bz2 compressed object:
$ l1asm foobar -pack
creates a "foobar.l1obj.bz2" packed object file.
The VM detects a .bz2 object code and decompress it before execution.

New: prog/primes-3.3.l1asm, hand optimized assembly for primenum search.
Runs a bit faster as primes-3.l1com program.

vm/main.c: stpop(i/d) better bound checks on stack pointer.

vm/modules/string cleanup. Now compiles and runs right.
This was tested by the string library and it works!

String code cleanup: "strlen_safe" function added to other "string.c" files.

-- Stefan Pietzonke <jay-t@gmx.net>  Sun Jun 30 2019 17:38 +0200


L1VM - (0.9.6)
New: threaddata now allocated by calloc() in main.c, main().
VM: MAXCPUCORES now prints error message on compile if it is "0"!
Updated README.md nd vm/modules/genann/README.md.

NEW
===
Added array variable assign for int64 and double array variables:
prog/array-int64.l1com and prog/array-double.l1com!

Added array support for the other variable types too!

Now assembler and compiler show version number 0.9.6 too!

NEW: array variable bounds check. See global.h: BOUNDSCHECK definition.
This checks every data access at runtime if SET to defined.

-- Stefan Pietzonke <jay-t@gmx.net>  Tue Jun 11 2019 19:24 +0200


L1VM - (0.9.5)
New: Assembler: max code and data sizes can be set via shell flag:
$ assemb/l1asm prog/hello-2.3 -sizes 40000 60000000

This sets the max code size to "40000" bytes and the max data size to "60000000" bytes.
Removed unused variables.
Added "-Wall" to zerobuild makefiles.
Cleaned up "global.h", user settings in one place at top!

assemb/checkd.c: get_temp_int() and get_temp_double() now show linenum and string on ERROR.
New: compiler can be called with "-lines" flag to set max number of source code lines:
$ l1com foobar -lines 40000

Compiler: added cleanup function.

-- Stefan Pietzonke <jay-t@gmx.net>  Thu May 23 2019 06:30 +0200


L1VM - (0.9.4)
New: data file can be loaded into byte variable array. See "prog/hello-2.3.l1com" for example code.
Example data declaration:
(set byte 40000 data_file $/home/stefan/l1vm-0.9.4/prog/hello.l1obj)
C compiler warning in VM fixed: "#define _GNU_SOURCE 1" in global.h set if not defined.

-- Stefan Pietzonke <jay-t@gmx.net>  Fri  May 17 2019 16:00 +0200


L1VM - (0.9.3)
New: file library uses S8 as handle type.
New: translate.h now uses "d" to use double floating point opcodes:
So instead of "*" now "*d" is needed. See translate.h for more.

-- Stefan Pietzonke <jay-t@gmx.net> Tue 7 May 2019 19:10 +0200


L1VM - (0.9.2)
New: string array handling in string library.
New: free_jit_code now inside of "#if JIT_COMPILER" definition.
New: string library: string_left, string_right, string_mid, string_tostring.
New: math library: double_rounded_string, round to given digits and store result in string.
New: warnings and an error exit if no JIT_COMPILER defined on 253 and 254 interrupts.
New: Interrupt 1/5: return number of free CPU cores.
Changed: genann module now gets string address on read/write functions.
Changed: process module now uses string address.
Changed: RS232 mode, now set from string address.
Compiler/assembler: Text line output only on ERRORS!

New: FANN neural networks library wrapper added.
See fann/ directory for more.
Changed: fann library now uses dynamic memory allocation for input_f array.
New: fann library now uses file handles like handles, see example code!

-- Stefan Pietzonke <jay-t@gmx.net>  Mon 29 Apr 2019 17:52 +0200


L1VM - (0.9.1)
New: SDL GUI functions.
See lib/sdl-lib.l1com.

New: VM: show loaded modules name and number.

New: assembler: CODE and DATA sizes set by MAXDATA preprocessor variable.

New: VM interrupt 0: 17: get current time.
VM interrupt 0: 18: get current date. see vm/main.c for more info and also prog/time.l1com.

Bugfixes: compiler: (var stpopb) expression fixed.
VM: date functions fixed. New: interrupt 19: get weekday since Sunday (Sunday = 0).
Bugfix: VM: stpopb argument not used right.

Bugfix: JIT compiler: double floating opcodes register search fixed.

New: compiler (loadreg) automatically set if function called like this:

(foo bar :foobar * call)

The star "*" sets loadreg automatically.

New: compiler debug printfs cleanup.

-- Stefan Pietzonke <jay-t@gmx.net>  Sun 24 Mar 2019 18:00 +0100


L1VM - (0.9)
New: start of JIT-compiler writing:
addi, subi, muli, divi, bandi, bori, bxori...
addd, subd, muld, divd

New: added noti, not opcode into assembler and VM.

New: if blocks in the compiler. See prog/if.l1com for an example.

New: S8/F8 alignement attributes added for variable declaration.
File and endianess modules.

Math library: functions for random number generation added.

Garbage collector for module dealloc memory.

New: compiler: if string length is set to 0 or "s" on an "set" variable declaration, then the real size of
the string will be set automatically!

Compiler bugfixes for double variable types.
Update for math library.

SDL library now initialized from vm/main.c.
A "SDL_module" definition can be set in the "global.h" include file!
New: Text output on SDL via TTF fonts.

New: programs which are using the SDL library must be started with the SDL flag: "-SDL".
Via "SDL_use" variable in vm/main.c.

-- Stefan Pietzonke <jay-t@gmx.net>  Sat 29 Dec 2018 22:00 +0100


L1VM - (0.8.1-4)
New: port to Windows. DLL load code for Linux and Windows.
New: library genann - neural networks library, demo code for training and running XOR function.

-- Stefan Pietzonke <jay-t@gmx.net>  Sun 1 Apr 2018 15:08 +0200


L1VM - (0.8.1-3)
Update

-- Stefan Pietzonke <jay-t@gmx.net>  Fri 16 Mar 2018 09:30 +0100


L1VM - (0.8.1-2)
New: net library for TCP/IP socket access.
In the global.h include the number of CPU cores can be set to zero for autoconfig at runtime.
Bugfixes in checkd.c number parsing code. Now strings with a "." are not parsed as double float numbers.

-- Stefan Pietzonke <jay-t@gmx.net>  Tue 27 Feb 2018 09:30 +0100


L1VM - (0.8)
BUGFIX: compiler now sets the right pull opcode, if there is something else to "pull" as a quadint!
In global.h file the setting flags are in one place.

-- Stefan Pietzonke <jay-t@gmx.net>  Sat 20 Jan 2018 15:00 +0100
